//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.7 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2020.07.13 at 07:58:15 PM MSK 
//


package ch.iec._61850._2003.scl;

import org.jvnet.jaxb2_commons.lang.*;
import org.jvnet.jaxb2_commons.locator.ObjectLocator;
import org.jvnet.jaxb2_commons.locator.util.LocatorUtils;

import javax.persistence.Basic;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.Table;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlAttribute;
import javax.xml.bind.annotation.XmlType;
import javax.xml.bind.annotation.adapters.NormalizedStringAdapter;
import javax.xml.bind.annotation.adapters.XmlJavaTypeAdapter;


/**
 * <p>Java class for tLogControl complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="tLogControl">
 *   &lt;complexContent>
 *     &lt;extension base="{http://www.iec.ch/61850/2003/SCL}tControlWithTriggerOpt">
 *       &lt;attribute name="logName" use="required" type="{http://www.iec.ch/61850/2003/SCL}tName" />
 *       &lt;attribute name="logEna" type="{http://www.w3.org/2001/XMLSchema}boolean" default="true" />
 *       &lt;attribute name="reasonCode" type="{http://www.w3.org/2001/XMLSchema}boolean" default="true" />
 *       &lt;anyAttribute processContents='lax' namespace='##other'/>
 *     &lt;/extension>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "tLogControl")
@Entity(name = "TLogControl")
@Table(name = "TLOG_CONTROL")
public class TLogControl
    extends TControlWithTriggerOpt
    implements Equals, HashCode
{

    @XmlAttribute(name = "logName", required = true)
    @XmlJavaTypeAdapter(NormalizedStringAdapter.class)
    protected String logName;
    @XmlAttribute(name = "logEna")
    protected Boolean logEna;
    @XmlAttribute(name = "reasonCode")
    protected Boolean reasonCode;

    /**
     * Gets the value of the logName property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "LOG_NAME", length = 255)
    public String getLogName() {
        return logName;
    }

    /**
     * Sets the value of the logName property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setLogName(String value) {
        this.logName = value;
    }

    /**
     * Gets the value of the logEna property.
     * 
     * @return
     *     possible object is
     *     {@link Boolean }
     *     
     */
    @Basic
    @Column(name = "LOG_ENA")
    public boolean isLogEna() {
        if (logEna == null) {
            return true;
        } else {
            return logEna;
        }
    }

    /**
     * Sets the value of the logEna property.
     * 
     * @param value
     *     allowed object is
     *     {@link Boolean }
     *     
     */
    public void setLogEna(Boolean value) {
        this.logEna = value;
    }

    /**
     * Gets the value of the reasonCode property.
     * 
     * @return
     *     possible object is
     *     {@link Boolean }
     *     
     */
    @Basic
    @Column(name = "REASON_CODE")
    public boolean isReasonCode() {
        if (reasonCode == null) {
            return true;
        } else {
            return reasonCode;
        }
    }

    /**
     * Sets the value of the reasonCode property.
     * 
     * @param value
     *     allowed object is
     *     {@link Boolean }
     *     
     */
    public void setReasonCode(Boolean value) {
        this.reasonCode = value;
    }

    public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy strategy) {
        if (!(object instanceof TLogControl)) {
            return false;
        }
        if (this == object) {
            return true;
        }
        if (!super.equals(thisLocator, thatLocator, object, strategy)) {
            return false;
        }
        final TLogControl that = ((TLogControl) object);
        {
            String lhsLogName;
            lhsLogName = this.getLogName();
            String rhsLogName;
            rhsLogName = that.getLogName();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "logName", lhsLogName), LocatorUtils.property(thatLocator, "logName", rhsLogName), lhsLogName, rhsLogName)) {
                return false;
            }
        }
        {
            boolean lhsLogEna;
            lhsLogEna = ((this.logEna!= null)?this.isLogEna():false);
            boolean rhsLogEna;
            rhsLogEna = ((that.logEna!= null)?that.isLogEna():false);
            if (!strategy.equals(LocatorUtils.property(thisLocator, "logEna", lhsLogEna), LocatorUtils.property(thatLocator, "logEna", rhsLogEna), lhsLogEna, rhsLogEna)) {
                return false;
            }
        }
        {
            boolean lhsReasonCode;
            lhsReasonCode = ((this.reasonCode!= null)?this.isReasonCode():false);
            boolean rhsReasonCode;
            rhsReasonCode = ((that.reasonCode!= null)?that.isReasonCode():false);
            if (!strategy.equals(LocatorUtils.property(thisLocator, "reasonCode", lhsReasonCode), LocatorUtils.property(thatLocator, "reasonCode", rhsReasonCode), lhsReasonCode, rhsReasonCode)) {
                return false;
            }
        }
        return true;
    }

    public boolean equals(Object object) {
        final EqualsStrategy strategy = JAXBEqualsStrategy.INSTANCE;
        return equals(null, null, object, strategy);
    }

    public int hashCode(ObjectLocator locator, HashCodeStrategy strategy) {
        int currentHashCode = super.hashCode(locator, strategy);
        {
            String theLogName;
            theLogName = this.getLogName();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "logName", theLogName), currentHashCode, theLogName);
        }
        {
            boolean theLogEna;
            theLogEna = ((this.logEna!= null)?this.isLogEna():false);
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "logEna", theLogEna), currentHashCode, theLogEna);
        }
        {
            boolean theReasonCode;
            theReasonCode = ((this.reasonCode!= null)?this.isReasonCode():false);
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "reasonCode", theReasonCode), currentHashCode, theReasonCode);
        }
        return currentHashCode;
    }

    public int hashCode() {
        final HashCodeStrategy strategy = JAXBHashCodeStrategy.INSTANCE;
        return this.hashCode(null, strategy);
    }

}
