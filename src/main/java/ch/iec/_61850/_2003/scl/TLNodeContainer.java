//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.7 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2020.07.13 at 07:58:15 PM MSK 
//


package ch.iec._61850._2003.scl;

import org.jvnet.jaxb2_commons.lang.*;
import org.jvnet.jaxb2_commons.locator.ObjectLocator;
import org.jvnet.jaxb2_commons.locator.util.LocatorUtils;

import javax.persistence.*;
import javax.xml.bind.annotation.*;
import java.util.ArrayList;
import java.util.List;


/**
 * <p>Java class for tLNodeContainer complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="tLNodeContainer">
 *   &lt;complexContent>
 *     &lt;extension base="{http://www.iec.ch/61850/2003/SCL}tNaming">
 *       &lt;sequence>
 *         &lt;element name="LNode" type="{http://www.iec.ch/61850/2003/SCL}tLNode" maxOccurs="unbounded" minOccurs="0"/>
 *       &lt;/sequence>
 *       &lt;anyAttribute processContents='lax' namespace='##other'/>
 *     &lt;/extension>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "tLNodeContainer", propOrder = {
    "lNode"
})
@XmlSeeAlso({
    TConnectivityNode.class,
    TPowerSystemResource.class
})
@Entity(name = "TLNodeContainer")
@Table(name = "TLNODE_CONTAINER")
public abstract class TLNodeContainer
    extends TNaming
    implements Equals, HashCode
{

    @XmlElement(name = "LNode")
    protected List<TLNode> lNode;

    /**
     * Gets the value of the lNode property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the lNode property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getLNode().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link TLNode }
     * 
     * 
     */
    @OneToMany(targetEntity = TLNode.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "LNODE_TLNODE_CONTAINER_HJID")
    public List<TLNode> getLNode() {
        if (lNode == null) {
            lNode = new ArrayList<TLNode>();
        }
        return this.lNode;
    }

    /**
     * 
     * 
     */
    public void setLNode(List<TLNode> lNode) {
        this.lNode = lNode;
    }

    public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy strategy) {
        if (!(object instanceof TLNodeContainer)) {
            return false;
        }
        if (this == object) {
            return true;
        }
        if (!super.equals(thisLocator, thatLocator, object, strategy)) {
            return false;
        }
        final TLNodeContainer that = ((TLNodeContainer) object);
        {
            List<TLNode> lhsLNode;
            lhsLNode = (((this.lNode!= null)&&(!this.lNode.isEmpty()))?this.getLNode():null);
            List<TLNode> rhsLNode;
            rhsLNode = (((that.lNode!= null)&&(!that.lNode.isEmpty()))?that.getLNode():null);
            if (!strategy.equals(LocatorUtils.property(thisLocator, "lNode", lhsLNode), LocatorUtils.property(thatLocator, "lNode", rhsLNode), lhsLNode, rhsLNode)) {
                return false;
            }
        }
        return true;
    }

    public boolean equals(Object object) {
        final EqualsStrategy strategy = JAXBEqualsStrategy.INSTANCE;
        return equals(null, null, object, strategy);
    }

    public int hashCode(ObjectLocator locator, HashCodeStrategy strategy) {
        int currentHashCode = super.hashCode(locator, strategy);
        {
            List<TLNode> theLNode;
            theLNode = (((this.lNode!= null)&&(!this.lNode.isEmpty()))?this.getLNode():null);
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "lNode", theLNode), currentHashCode, theLNode);
        }
        return currentHashCode;
    }

    public int hashCode() {
        final HashCodeStrategy strategy = JAXBHashCodeStrategy.INSTANCE;
        return this.hashCode(null, strategy);
    }

}
