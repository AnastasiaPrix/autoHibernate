//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.7 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2020.07.13 at 07:58:15 PM MSK 
//


package ch.iec._61850._2003.scl;

import org.jvnet.jaxb2_commons.lang.*;
import org.jvnet.jaxb2_commons.locator.ObjectLocator;
import org.jvnet.jaxb2_commons.locator.util.LocatorUtils;

import javax.persistence.*;
import javax.xml.bind.annotation.*;
import javax.xml.bind.annotation.adapters.NormalizedStringAdapter;
import javax.xml.bind.annotation.adapters.XmlJavaTypeAdapter;
import java.util.ArrayList;
import java.util.List;


/**
 * <p>Java class for tIED complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="tIED">
 *   &lt;complexContent>
 *     &lt;extension base="{http://www.iec.ch/61850/2003/SCL}tNaming">
 *       &lt;sequence>
 *         &lt;element name="Services" type="{http://www.iec.ch/61850/2003/SCL}tServices" minOccurs="0"/>
 *         &lt;element name="AccessPoint" type="{http://www.iec.ch/61850/2003/SCL}tAccessPoint" maxOccurs="unbounded"/>
 *       &lt;/sequence>
 *       &lt;attribute name="type" type="{http://www.w3.org/2001/XMLSchema}normalizedString" />
 *       &lt;attribute name="manufacturer" type="{http://www.w3.org/2001/XMLSchema}normalizedString" />
 *       &lt;attribute name="configVersion" type="{http://www.w3.org/2001/XMLSchema}normalizedString" />
 *       &lt;anyAttribute processContents='lax' namespace='##other'/>
 *     &lt;/extension>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "tIED", propOrder = {
    "services",
    "accessPoint"
})
@Entity(name = "TIED")
@Table(name = "TIED")
public class TIED
    extends TNaming
    implements Equals, HashCode
{

    @XmlElement(name = "Services")
    protected TServices services;
    @XmlElement(name = "AccessPoint", required = true)
    protected List<TAccessPoint> accessPoint;
    @XmlAttribute(name = "type")
    @XmlJavaTypeAdapter(NormalizedStringAdapter.class)
    @XmlSchemaType(name = "normalizedString")
    protected String type;
    @XmlAttribute(name = "manufacturer")
    @XmlJavaTypeAdapter(NormalizedStringAdapter.class)
    @XmlSchemaType(name = "normalizedString")
    protected String manufacturer;
    @XmlAttribute(name = "configVersion")
    @XmlJavaTypeAdapter(NormalizedStringAdapter.class)
    @XmlSchemaType(name = "normalizedString")
    protected String configVersion;

    /**
     * Gets the value of the services property.
     * 
     * @return
     *     possible object is
     *     {@link TServices }
     *     
     */
    @ManyToOne(targetEntity = TServices.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "SERVICES_TIED_HJID")
    public TServices getServices() {
        return services;
    }

    /**
     * Sets the value of the services property.
     * 
     * @param value
     *     allowed object is
     *     {@link TServices }
     *     
     */
    public void setServices(TServices value) {
        this.services = value;
    }

    /**
     * Gets the value of the accessPoint property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the accessPoint property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getAccessPoint().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link TAccessPoint }
     * 
     * 
     */
    @OneToMany(targetEntity = TAccessPoint.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "ACCESS_POINT_TIED_HJID")
    public List<TAccessPoint> getAccessPoint() {
        if (accessPoint == null) {
            accessPoint = new ArrayList<TAccessPoint>();
        }
        return this.accessPoint;
    }

    /**
     * 
     * 
     */
    public void setAccessPoint(List<TAccessPoint> accessPoint) {
        this.accessPoint = accessPoint;
    }

    /**
     * Gets the value of the type property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "TYPE_", length = 255)
    public String getType() {
        return type;
    }

    /**
     * Sets the value of the type property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setType(String value) {
        this.type = value;
    }

    /**
     * Gets the value of the manufacturer property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "MANUFACTURER", length = 255)
    public String getManufacturer() {
        return manufacturer;
    }

    /**
     * Sets the value of the manufacturer property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setManufacturer(String value) {
        this.manufacturer = value;
    }

    /**
     * Gets the value of the configVersion property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "CONFIG_VERSION", length = 255)
    public String getConfigVersion() {
        return configVersion;
    }

    /**
     * Sets the value of the configVersion property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setConfigVersion(String value) {
        this.configVersion = value;
    }

    public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy strategy) {
        if (!(object instanceof TIED)) {
            return false;
        }
        if (this == object) {
            return true;
        }
        if (!super.equals(thisLocator, thatLocator, object, strategy)) {
            return false;
        }
        final TIED that = ((TIED) object);
        {
            TServices lhsServices;
            lhsServices = this.getServices();
            TServices rhsServices;
            rhsServices = that.getServices();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "services", lhsServices), LocatorUtils.property(thatLocator, "services", rhsServices), lhsServices, rhsServices)) {
                return false;
            }
        }
        {
            List<TAccessPoint> lhsAccessPoint;
            lhsAccessPoint = (((this.accessPoint!= null)&&(!this.accessPoint.isEmpty()))?this.getAccessPoint():null);
            List<TAccessPoint> rhsAccessPoint;
            rhsAccessPoint = (((that.accessPoint!= null)&&(!that.accessPoint.isEmpty()))?that.getAccessPoint():null);
            if (!strategy.equals(LocatorUtils.property(thisLocator, "accessPoint", lhsAccessPoint), LocatorUtils.property(thatLocator, "accessPoint", rhsAccessPoint), lhsAccessPoint, rhsAccessPoint)) {
                return false;
            }
        }
        {
            String lhsType;
            lhsType = this.getType();
            String rhsType;
            rhsType = that.getType();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "type", lhsType), LocatorUtils.property(thatLocator, "type", rhsType), lhsType, rhsType)) {
                return false;
            }
        }
        {
            String lhsManufacturer;
            lhsManufacturer = this.getManufacturer();
            String rhsManufacturer;
            rhsManufacturer = that.getManufacturer();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "manufacturer", lhsManufacturer), LocatorUtils.property(thatLocator, "manufacturer", rhsManufacturer), lhsManufacturer, rhsManufacturer)) {
                return false;
            }
        }
        {
            String lhsConfigVersion;
            lhsConfigVersion = this.getConfigVersion();
            String rhsConfigVersion;
            rhsConfigVersion = that.getConfigVersion();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "configVersion", lhsConfigVersion), LocatorUtils.property(thatLocator, "configVersion", rhsConfigVersion), lhsConfigVersion, rhsConfigVersion)) {
                return false;
            }
        }
        return true;
    }

    public boolean equals(Object object) {
        final EqualsStrategy strategy = JAXBEqualsStrategy.INSTANCE;
        return equals(null, null, object, strategy);
    }

    public int hashCode(ObjectLocator locator, HashCodeStrategy strategy) {
        int currentHashCode = super.hashCode(locator, strategy);
        {
            TServices theServices;
            theServices = this.getServices();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "services", theServices), currentHashCode, theServices);
        }
        {
            List<TAccessPoint> theAccessPoint;
            theAccessPoint = (((this.accessPoint!= null)&&(!this.accessPoint.isEmpty()))?this.getAccessPoint():null);
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "accessPoint", theAccessPoint), currentHashCode, theAccessPoint);
        }
        {
            String theType;
            theType = this.getType();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "type", theType), currentHashCode, theType);
        }
        {
            String theManufacturer;
            theManufacturer = this.getManufacturer();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "manufacturer", theManufacturer), currentHashCode, theManufacturer);
        }
        {
            String theConfigVersion;
            theConfigVersion = this.getConfigVersion();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "configVersion", theConfigVersion), currentHashCode, theConfigVersion);
        }
        return currentHashCode;
    }

    public int hashCode() {
        final HashCodeStrategy strategy = JAXBHashCodeStrategy.INSTANCE;
        return this.hashCode(null, strategy);
    }

}
