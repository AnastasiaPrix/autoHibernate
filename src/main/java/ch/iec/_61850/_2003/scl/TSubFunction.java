//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.7 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2020.07.13 at 07:58:15 PM MSK 
//


package ch.iec._61850._2003.scl;

import org.jvnet.jaxb2_commons.lang.*;
import org.jvnet.jaxb2_commons.locator.ObjectLocator;
import org.jvnet.jaxb2_commons.locator.util.LocatorUtils;

import javax.persistence.*;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlType;
import java.util.ArrayList;
import java.util.List;


/**
 * <p>Java class for tSubFunction complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="tSubFunction">
 *   &lt;complexContent>
 *     &lt;extension base="{http://www.iec.ch/61850/2003/SCL}tPowerSystemResource">
 *       &lt;sequence>
 *         &lt;element name="GeneralEquipment" type="{http://www.iec.ch/61850/2003/SCL}tGeneralEquipment" maxOccurs="unbounded" minOccurs="0"/>
 *       &lt;/sequence>
 *       &lt;anyAttribute processContents='lax' namespace='##other'/>
 *     &lt;/extension>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "tSubFunction", propOrder = {
    "generalEquipment"
})
@Entity(name = "TSubFunction")
@Table(name = "TSUB_FUNCTION")
public class TSubFunction
    extends TPowerSystemResource
    implements Equals, HashCode
{

    @XmlElement(name = "GeneralEquipment")
    protected List<TGeneralEquipment> generalEquipment;

    /**
     * Gets the value of the generalEquipment property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the generalEquipment property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getGeneralEquipment().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link TGeneralEquipment }
     * 
     * 
     */
    @OneToMany(targetEntity = TGeneralEquipment.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "GENERAL_EQUIPMENT_TSUB_FUNCT_0")
    public List<TGeneralEquipment> getGeneralEquipment() {
        if (generalEquipment == null) {
            generalEquipment = new ArrayList<TGeneralEquipment>();
        }
        return this.generalEquipment;
    }

    /**
     * 
     * 
     */
    public void setGeneralEquipment(List<TGeneralEquipment> generalEquipment) {
        this.generalEquipment = generalEquipment;
    }

    public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy strategy) {
        if (!(object instanceof TSubFunction)) {
            return false;
        }
        if (this == object) {
            return true;
        }
        if (!super.equals(thisLocator, thatLocator, object, strategy)) {
            return false;
        }
        final TSubFunction that = ((TSubFunction) object);
        {
            List<TGeneralEquipment> lhsGeneralEquipment;
            lhsGeneralEquipment = (((this.generalEquipment!= null)&&(!this.generalEquipment.isEmpty()))?this.getGeneralEquipment():null);
            List<TGeneralEquipment> rhsGeneralEquipment;
            rhsGeneralEquipment = (((that.generalEquipment!= null)&&(!that.generalEquipment.isEmpty()))?that.getGeneralEquipment():null);
            if (!strategy.equals(LocatorUtils.property(thisLocator, "generalEquipment", lhsGeneralEquipment), LocatorUtils.property(thatLocator, "generalEquipment", rhsGeneralEquipment), lhsGeneralEquipment, rhsGeneralEquipment)) {
                return false;
            }
        }
        return true;
    }

    public boolean equals(Object object) {
        final EqualsStrategy strategy = JAXBEqualsStrategy.INSTANCE;
        return equals(null, null, object, strategy);
    }

    public int hashCode(ObjectLocator locator, HashCodeStrategy strategy) {
        int currentHashCode = super.hashCode(locator, strategy);
        {
            List<TGeneralEquipment> theGeneralEquipment;
            theGeneralEquipment = (((this.generalEquipment!= null)&&(!this.generalEquipment.isEmpty()))?this.getGeneralEquipment():null);
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "generalEquipment", theGeneralEquipment), currentHashCode, theGeneralEquipment);
        }
        return currentHashCode;
    }

    public int hashCode() {
        final HashCodeStrategy strategy = JAXBHashCodeStrategy.INSTANCE;
        return this.hashCode(null, strategy);
    }

}
