//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.7 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2020.07.13 at 07:58:15 PM MSK 
//


package ch.iec._61850._2003.scl;

import org.jvnet.jaxb2_commons.lang.*;
import org.jvnet.jaxb2_commons.locator.ObjectLocator;
import org.jvnet.jaxb2_commons.locator.util.LocatorUtils;

import javax.persistence.*;
import javax.xml.bind.annotation.*;
import javax.xml.bind.annotation.adapters.NormalizedStringAdapter;
import javax.xml.bind.annotation.adapters.XmlJavaTypeAdapter;
import java.util.ArrayList;
import java.util.List;


/**
 * <p>Java class for tDOType complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="tDOType">
 *   &lt;complexContent>
 *     &lt;extension base="{http://www.iec.ch/61850/2003/SCL}tIDNaming">
 *       &lt;choice maxOccurs="unbounded" minOccurs="0">
 *         &lt;element name="SDO" type="{http://www.iec.ch/61850/2003/SCL}tSDO"/>
 *         &lt;element name="DA" type="{http://www.iec.ch/61850/2003/SCL}tDA"/>
 *       &lt;/choice>
 *       &lt;attribute name="iedType" type="{http://www.iec.ch/61850/2003/SCL}tAnyName" default="" />
 *       &lt;attribute name="cdc" use="required" type="{http://www.iec.ch/61850/2003/SCL}tCDCEnum" />
 *       &lt;anyAttribute processContents='lax' namespace='##other'/>
 *     &lt;/extension>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "tDOType", propOrder = {
    "sdoOrDA"
})
@Entity(name = "TDOType")
@Table(name = "TDOTYPE")
public class TDOType
    extends TIDNaming
    implements Equals, HashCode
{

    @XmlElements({
        @XmlElement(name = "SDO", type = TSDO.class),
        @XmlElement(name = "DA", type = TDA.class)
    })
    protected List<TBaseElement> sdoOrDA;
    @XmlAttribute(name = "iedType")
    @XmlJavaTypeAdapter(NormalizedStringAdapter.class)
    protected String iedType;
    @XmlAttribute(name = "cdc", required = true)
    protected String cdc;

    /**
     * Gets the value of the sdoOrDA property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the sdoOrDA property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getSDOOrDA().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link TSDO }
     * {@link TDA }
     * 
     * 
     */
    @OneToMany(targetEntity = TBaseElement.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "SDOOR_DA_TDOTYPE_HJID")
    public List<TBaseElement> getSDOOrDA() {
        if (sdoOrDA == null) {
            sdoOrDA = new ArrayList<TBaseElement>();
        }
        return this.sdoOrDA;
    }

    /**
     * 
     * 
     */
    public void setSDOOrDA(List<TBaseElement> sdoOrDA) {
        this.sdoOrDA = sdoOrDA;
    }

    /**
     * Gets the value of the iedType property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "IED_TYPE", length = 255)
    public String getIedType() {
        if (iedType == null) {
            return "";
        } else {
            return iedType;
        }
    }

    /**
     * Sets the value of the iedType property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setIedType(String value) {
        this.iedType = value;
    }

    /**
     * Gets the value of the cdc property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "CDC")
    public String getCdc() {
        return cdc;
    }

    /**
     * Sets the value of the cdc property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setCdc(String value) {
        this.cdc = value;
    }

    public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy strategy) {
        if (!(object instanceof TDOType)) {
            return false;
        }
        if (this == object) {
            return true;
        }
        if (!super.equals(thisLocator, thatLocator, object, strategy)) {
            return false;
        }
        final TDOType that = ((TDOType) object);
        {
            List<TBaseElement> lhsSDOOrDA;
            lhsSDOOrDA = (((this.sdoOrDA!= null)&&(!this.sdoOrDA.isEmpty()))?this.getSDOOrDA():null);
            List<TBaseElement> rhsSDOOrDA;
            rhsSDOOrDA = (((that.sdoOrDA!= null)&&(!that.sdoOrDA.isEmpty()))?that.getSDOOrDA():null);
            if (!strategy.equals(LocatorUtils.property(thisLocator, "sdoOrDA", lhsSDOOrDA), LocatorUtils.property(thatLocator, "sdoOrDA", rhsSDOOrDA), lhsSDOOrDA, rhsSDOOrDA)) {
                return false;
            }
        }
        {
            String lhsIedType;
            lhsIedType = this.getIedType();
            String rhsIedType;
            rhsIedType = that.getIedType();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "iedType", lhsIedType), LocatorUtils.property(thatLocator, "iedType", rhsIedType), lhsIedType, rhsIedType)) {
                return false;
            }
        }
        {
            String lhsCdc;
            lhsCdc = this.getCdc();
            String rhsCdc;
            rhsCdc = that.getCdc();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "cdc", lhsCdc), LocatorUtils.property(thatLocator, "cdc", rhsCdc), lhsCdc, rhsCdc)) {
                return false;
            }
        }
        return true;
    }

    public boolean equals(Object object) {
        final EqualsStrategy strategy = JAXBEqualsStrategy.INSTANCE;
        return equals(null, null, object, strategy);
    }

    public int hashCode(ObjectLocator locator, HashCodeStrategy strategy) {
        int currentHashCode = super.hashCode(locator, strategy);
        {
            List<TBaseElement> theSDOOrDA;
            theSDOOrDA = (((this.sdoOrDA!= null)&&(!this.sdoOrDA.isEmpty()))?this.getSDOOrDA():null);
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "sdoOrDA", theSDOOrDA), currentHashCode, theSDOOrDA);
        }
        {
            String theIedType;
            theIedType = this.getIedType();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "iedType", theIedType), currentHashCode, theIedType);
        }
        {
            String theCdc;
            theCdc = this.getCdc();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "cdc", theCdc), currentHashCode, theCdc);
        }
        return currentHashCode;
    }

    public int hashCode() {
        final HashCodeStrategy strategy = JAXBHashCodeStrategy.INSTANCE;
        return this.hashCode(null, strategy);
    }

}
