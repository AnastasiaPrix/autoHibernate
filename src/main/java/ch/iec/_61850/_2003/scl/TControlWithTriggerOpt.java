//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.7 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2020.07.13 at 07:58:15 PM MSK 
//


package ch.iec._61850._2003.scl;

import org.jvnet.jaxb2_commons.lang.*;
import org.jvnet.jaxb2_commons.locator.ObjectLocator;
import org.jvnet.jaxb2_commons.locator.util.LocatorUtils;

import javax.persistence.*;
import javax.xml.bind.annotation.*;


/**
 * <p>Java class for tControlWithTriggerOpt complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="tControlWithTriggerOpt">
 *   &lt;complexContent>
 *     &lt;extension base="{http://www.iec.ch/61850/2003/SCL}tControl">
 *       &lt;sequence>
 *         &lt;element name="TrgOps" type="{http://www.iec.ch/61850/2003/SCL}tTrgOps" minOccurs="0"/>
 *       &lt;/sequence>
 *       &lt;attribute name="intgPd" type="{http://www.w3.org/2001/XMLSchema}unsignedInt" default="0" />
 *       &lt;anyAttribute processContents='lax' namespace='##other'/>
 *     &lt;/extension>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "tControlWithTriggerOpt", propOrder = {
    "trgOps"
})
@XmlSeeAlso({
    TReportControl.class,
    TLogControl.class
})
@Entity(name = "TControlWithTriggerOpt")
@Table(name = "TCONTROL_WITH_TRIGGER_OPT")
public abstract class TControlWithTriggerOpt
    extends TControl
    implements Equals, HashCode
{

    @XmlElement(name = "TrgOps")
    protected TTrgOps trgOps;
    @XmlAttribute(name = "intgPd")
    @XmlSchemaType(name = "unsignedInt")
    protected Long intgPd;

    /**
     * Gets the value of the trgOps property.
     * 
     * @return
     *     possible object is
     *     {@link TTrgOps }
     *     
     */
    @ManyToOne(targetEntity = TTrgOps.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "TRG_OPS_TCONTROL_WITH_TRIGGE_0")
    public TTrgOps getTrgOps() {
        return trgOps;
    }

    /**
     * Sets the value of the trgOps property.
     * 
     * @param value
     *     allowed object is
     *     {@link TTrgOps }
     *     
     */
    public void setTrgOps(TTrgOps value) {
        this.trgOps = value;
    }

    /**
     * Gets the value of the intgPd property.
     * 
     * @return
     *     possible object is
     *     {@link Long }
     *     
     */
    @Basic
    @Column(name = "INTG_PD", precision = 10, scale = 0)
    public long getIntgPd() {
        if (intgPd == null) {
            return  0L;
        } else {
            return intgPd;
        }
    }

    /**
     * Sets the value of the intgPd property.
     * 
     * @param value
     *     allowed object is
     *     {@link Long }
     *     
     */
    public void setIntgPd(Long value) {
        this.intgPd = value;
    }

    public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy strategy) {
        if (!(object instanceof TControlWithTriggerOpt)) {
            return false;
        }
        if (this == object) {
            return true;
        }
        if (!super.equals(thisLocator, thatLocator, object, strategy)) {
            return false;
        }
        final TControlWithTriggerOpt that = ((TControlWithTriggerOpt) object);
        {
            TTrgOps lhsTrgOps;
            lhsTrgOps = this.getTrgOps();
            TTrgOps rhsTrgOps;
            rhsTrgOps = that.getTrgOps();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "trgOps", lhsTrgOps), LocatorUtils.property(thatLocator, "trgOps", rhsTrgOps), lhsTrgOps, rhsTrgOps)) {
                return false;
            }
        }
        {
            long lhsIntgPd;
            lhsIntgPd = ((this.intgPd!= null)?this.getIntgPd(): 0L);
            long rhsIntgPd;
            rhsIntgPd = ((that.intgPd!= null)?that.getIntgPd(): 0L);
            if (!strategy.equals(LocatorUtils.property(thisLocator, "intgPd", lhsIntgPd), LocatorUtils.property(thatLocator, "intgPd", rhsIntgPd), lhsIntgPd, rhsIntgPd)) {
                return false;
            }
        }
        return true;
    }

    public boolean equals(Object object) {
        final EqualsStrategy strategy = JAXBEqualsStrategy.INSTANCE;
        return equals(null, null, object, strategy);
    }

    public int hashCode(ObjectLocator locator, HashCodeStrategy strategy) {
        int currentHashCode = super.hashCode(locator, strategy);
        {
            TTrgOps theTrgOps;
            theTrgOps = this.getTrgOps();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "trgOps", theTrgOps), currentHashCode, theTrgOps);
        }
        {
            long theIntgPd;
            theIntgPd = ((this.intgPd!= null)?this.getIntgPd(): 0L);
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "intgPd", theIntgPd), currentHashCode, theIntgPd);
        }
        return currentHashCode;
    }

    public int hashCode() {
        final HashCodeStrategy strategy = JAXBHashCodeStrategy.INSTANCE;
        return this.hashCode(null, strategy);
    }

}
