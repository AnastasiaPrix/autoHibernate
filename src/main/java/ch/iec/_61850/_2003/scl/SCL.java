//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.7 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2020.07.13 at 07:58:15 PM MSK 
//


package ch.iec._61850._2003.scl;

import org.jvnet.jaxb2_commons.lang.*;
import org.jvnet.jaxb2_commons.locator.ObjectLocator;
import org.jvnet.jaxb2_commons.locator.util.LocatorUtils;

import javax.persistence.*;
import javax.xml.bind.annotation.*;
import java.util.ArrayList;
import java.util.List;


/**
 * <p>Java class for anonymous complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType>
 *   &lt;complexContent>
 *     &lt;extension base="{http://www.iec.ch/61850/2003/SCL}tBaseElement">
 *       &lt;sequence>
 *         &lt;element name="Header" type="{http://www.iec.ch/61850/2003/SCL}tHeader"/>
 *         &lt;element ref="{http://www.iec.ch/61850/2003/SCL}Substation" maxOccurs="unbounded" minOccurs="0"/>
 *         &lt;element ref="{http://www.iec.ch/61850/2003/SCL}Communication" minOccurs="0"/>
 *         &lt;element ref="{http://www.iec.ch/61850/2003/SCL}IED" maxOccurs="unbounded" minOccurs="0"/>
 *         &lt;element ref="{http://www.iec.ch/61850/2003/SCL}DataTypeTemplates" minOccurs="0"/>
 *       &lt;/sequence>
 *       &lt;anyAttribute processContents='lax' namespace='##other'/>
 *     &lt;/extension>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "", propOrder = {
    "header",
    "substation",
    "communication",
    "ied",
    "dataTypeTemplates"
})
@XmlRootElement(name = "SCL")
@Entity(name = "SCL")
@Table(name = "SCL")
public class SCL
    extends TBaseElement
    implements Equals, HashCode
{

    @XmlElement(name = "Header", required = true)
    protected THeader header;
    @XmlElement(name = "Substation")
    protected List<TSubstation> substation;
    @XmlElement(name = "Communication")
    protected TCommunication communication;
    @XmlElement(name = "IED")
    protected List<TIED> ied;
    @XmlElement(name = "DataTypeTemplates")
    protected TDataTypeTemplates dataTypeTemplates;

    /**
     * Gets the value of the header property.
     * 
     * @return
     *     possible object is
     *     {@link THeader }
     *     
     */
    @ManyToOne(targetEntity = THeader.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "HEADER_SCL_HJID")
    public THeader getHeader() {
        return header;
    }

    /**
     * Sets the value of the header property.
     * 
     * @param value
     *     allowed object is
     *     {@link THeader }
     *     
     */
    public void setHeader(THeader value) {
        this.header = value;
    }

    /**
     * Gets the value of the substation property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the substation property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getSubstation().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link TSubstation }
     * 
     * 
     */
    @OneToMany(targetEntity = TSubstation.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "SUBSTATION_SCL_HJID")
    public List<TSubstation> getSubstation() {
        if (substation == null) {
            substation = new ArrayList<TSubstation>();
        }
        return this.substation;
    }

    /**
     * 
     * 
     */
    public void setSubstation(List<TSubstation> substation) {
        this.substation = substation;
    }

    /**
     * Gets the value of the communication property.
     * 
     * @return
     *     possible object is
     *     {@link TCommunication }
     *     
     */
    @ManyToOne(targetEntity = TCommunication.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "COMMUNICATION_SCL_HJID")
    public TCommunication getCommunication() {
        return communication;
    }

    /**
     * Sets the value of the communication property.
     * 
     * @param value
     *     allowed object is
     *     {@link TCommunication }
     *     
     */
    public void setCommunication(TCommunication value) {
        this.communication = value;
    }

    /**
     * Gets the value of the ied property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the ied property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getIED().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link TIED }
     * 
     * 
     */
    @OneToMany(targetEntity = TIED.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "IED_SCL_HJID")
    public List<TIED> getIED() {
        if (ied == null) {
            ied = new ArrayList<TIED>();
        }
        return this.ied;
    }

    /**
     * 
     * 
     */
    public void setIED(List<TIED> ied) {
        this.ied = ied;
    }

    /**
     * Gets the value of the dataTypeTemplates property.
     * 
     * @return
     *     possible object is
     *     {@link TDataTypeTemplates }
     *     
     */
    @ManyToOne(targetEntity = TDataTypeTemplates.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "DATA_TYPE_TEMPLATES_SCL_HJID")
    public TDataTypeTemplates getDataTypeTemplates() {
        return dataTypeTemplates;
    }

    /**
     * Sets the value of the dataTypeTemplates property.
     * 
     * @param value
     *     allowed object is
     *     {@link TDataTypeTemplates }
     *     
     */
    public void setDataTypeTemplates(TDataTypeTemplates value) {
        this.dataTypeTemplates = value;
    }

    public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy strategy) {
        if (!(object instanceof SCL)) {
            return false;
        }
        if (this == object) {
            return true;
        }
        if (!super.equals(thisLocator, thatLocator, object, strategy)) {
            return false;
        }
        final SCL that = ((SCL) object);
        {
            THeader lhsHeader;
            lhsHeader = this.getHeader();
            THeader rhsHeader;
            rhsHeader = that.getHeader();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "header", lhsHeader), LocatorUtils.property(thatLocator, "header", rhsHeader), lhsHeader, rhsHeader)) {
                return false;
            }
        }
        {
            List<TSubstation> lhsSubstation;
            lhsSubstation = (((this.substation!= null)&&(!this.substation.isEmpty()))?this.getSubstation():null);
            List<TSubstation> rhsSubstation;
            rhsSubstation = (((that.substation!= null)&&(!that.substation.isEmpty()))?that.getSubstation():null);
            if (!strategy.equals(LocatorUtils.property(thisLocator, "substation", lhsSubstation), LocatorUtils.property(thatLocator, "substation", rhsSubstation), lhsSubstation, rhsSubstation)) {
                return false;
            }
        }
        {
            TCommunication lhsCommunication;
            lhsCommunication = this.getCommunication();
            TCommunication rhsCommunication;
            rhsCommunication = that.getCommunication();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "communication", lhsCommunication), LocatorUtils.property(thatLocator, "communication", rhsCommunication), lhsCommunication, rhsCommunication)) {
                return false;
            }
        }
        {
            List<TIED> lhsIED;
            lhsIED = (((this.ied!= null)&&(!this.ied.isEmpty()))?this.getIED():null);
            List<TIED> rhsIED;
            rhsIED = (((that.ied!= null)&&(!that.ied.isEmpty()))?that.getIED():null);
            if (!strategy.equals(LocatorUtils.property(thisLocator, "ied", lhsIED), LocatorUtils.property(thatLocator, "ied", rhsIED), lhsIED, rhsIED)) {
                return false;
            }
        }
        {
            TDataTypeTemplates lhsDataTypeTemplates;
            lhsDataTypeTemplates = this.getDataTypeTemplates();
            TDataTypeTemplates rhsDataTypeTemplates;
            rhsDataTypeTemplates = that.getDataTypeTemplates();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "dataTypeTemplates", lhsDataTypeTemplates), LocatorUtils.property(thatLocator, "dataTypeTemplates", rhsDataTypeTemplates), lhsDataTypeTemplates, rhsDataTypeTemplates)) {
                return false;
            }
        }
        return true;
    }

    public boolean equals(Object object) {
        final EqualsStrategy strategy = JAXBEqualsStrategy.INSTANCE;
        return equals(null, null, object, strategy);
    }

    public int hashCode(ObjectLocator locator, HashCodeStrategy strategy) {
        int currentHashCode = super.hashCode(locator, strategy);
        {
            THeader theHeader;
            theHeader = this.getHeader();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "header", theHeader), currentHashCode, theHeader);
        }
        {
            List<TSubstation> theSubstation;
            theSubstation = (((this.substation!= null)&&(!this.substation.isEmpty()))?this.getSubstation():null);
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "substation", theSubstation), currentHashCode, theSubstation);
        }
        {
            TCommunication theCommunication;
            theCommunication = this.getCommunication();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "communication", theCommunication), currentHashCode, theCommunication);
        }
        {
            List<TIED> theIED;
            theIED = (((this.ied!= null)&&(!this.ied.isEmpty()))?this.getIED():null);
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "ied", theIED), currentHashCode, theIED);
        }
        {
            TDataTypeTemplates theDataTypeTemplates;
            theDataTypeTemplates = this.getDataTypeTemplates();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "dataTypeTemplates", theDataTypeTemplates), currentHashCode, theDataTypeTemplates);
        }
        return currentHashCode;
    }

    public int hashCode() {
        final HashCodeStrategy strategy = JAXBHashCodeStrategy.INSTANCE;
        return this.hashCode(null, strategy);
    }

}
