//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.7 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2020.07.13 at 07:58:15 PM MSK 
//


package ch.iec._61850._2003.scl;

import org.jvnet.jaxb2_commons.lang.*;
import org.jvnet.jaxb2_commons.locator.ObjectLocator;
import org.jvnet.jaxb2_commons.locator.util.LocatorUtils;

import javax.persistence.*;
import javax.xml.bind.annotation.*;
import java.util.ArrayList;
import java.util.List;


/**
 * <p>Java class for tDataTypeTemplates complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="tDataTypeTemplates">
 *   &lt;complexContent>
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       &lt;sequence>
 *         &lt;element name="LNodeType" type="{http://www.iec.ch/61850/2003/SCL}tLNodeType" maxOccurs="unbounded"/>
 *         &lt;element name="DOType" type="{http://www.iec.ch/61850/2003/SCL}tDOType" maxOccurs="unbounded"/>
 *         &lt;element name="DAType" type="{http://www.iec.ch/61850/2003/SCL}tDAType" maxOccurs="unbounded" minOccurs="0"/>
 *         &lt;element name="EnumType" type="{http://www.iec.ch/61850/2003/SCL}tEnumType" maxOccurs="unbounded" minOccurs="0"/>
 *       &lt;/sequence>
 *     &lt;/restriction>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "tDataTypeTemplates", propOrder = {
    "lNodeType",
    "doType",
    "daType",
    "enumType"
})
@Entity(name = "TDataTypeTemplates")
@Table(name = "TDATA_TYPE_TEMPLATES")
@Inheritance(strategy = InheritanceType.JOINED)
public class TDataTypeTemplates
    implements Equals, HashCode
{

    @XmlElement(name = "LNodeType", required = true)
    protected List<TLNodeType> lNodeType;
    @XmlElement(name = "DOType", required = true)
    protected List<TDOType> doType;
    @XmlElement(name = "DAType")
    protected List<TDAType> daType;
    @XmlElement(name = "EnumType")
    protected List<TEnumType> enumType;
    @XmlAttribute(name = "Hjid")
    protected Long hjid;

    /**
     * Gets the value of the lNodeType property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the lNodeType property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getLNodeType().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link TLNodeType }
     * 
     * 
     */
    @OneToMany(targetEntity = TLNodeType.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "LNODE_TYPE_TDATA_TYPE_TEMPLA_0")
    public List<TLNodeType> getLNodeType() {
        if (lNodeType == null) {
            lNodeType = new ArrayList<TLNodeType>();
        }
        return this.lNodeType;
    }

    /**
     * 
     * 
     */
    public void setLNodeType(List<TLNodeType> lNodeType) {
        this.lNodeType = lNodeType;
    }

    /**
     * Gets the value of the doType property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the doType property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getDOType().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link TDOType }
     * 
     * 
     */
    @OneToMany(targetEntity = TDOType.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "DOTYPE_TDATA_TYPE_TEMPLATES__0")
    public List<TDOType> getDOType() {
        if (doType == null) {
            doType = new ArrayList<TDOType>();
        }
        return this.doType;
    }

    /**
     * 
     * 
     */
    public void setDOType(List<TDOType> doType) {
        this.doType = doType;
    }

    /**
     * Gets the value of the daType property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the daType property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getDAType().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link TDAType }
     * 
     * 
     */
    @OneToMany(targetEntity = TDAType.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "DATYPE_TDATA_TYPE_TEMPLATES__0")
    public List<TDAType> getDAType() {
        if (daType == null) {
            daType = new ArrayList<TDAType>();
        }
        return this.daType;
    }

    /**
     * 
     * 
     */
    public void setDAType(List<TDAType> daType) {
        this.daType = daType;
    }

    /**
     * Gets the value of the enumType property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the enumType property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getEnumType().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link TEnumType }
     * 
     * 
     */
    @OneToMany(targetEntity = TEnumType.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "ENUM_TYPE_TDATA_TYPE_TEMPLAT_0")
    public List<TEnumType> getEnumType() {
        if (enumType == null) {
            enumType = new ArrayList<TEnumType>();
        }
        return this.enumType;
    }

    /**
     * 
     * 
     */
    public void setEnumType(List<TEnumType> enumType) {
        this.enumType = enumType;
    }

    /**
     * Gets the value of the hjid property.
     * 
     * @return
     *     possible object is
     *     {@link Long }
     *     
     */
    @Id
    @Column(name = "HJID")
    @GeneratedValue(strategy = GenerationType.AUTO)
    public Long getHjid() {
        return hjid;
    }

    /**
     * Sets the value of the hjid property.
     * 
     * @param value
     *     allowed object is
     *     {@link Long }
     *     
     */
    public void setHjid(Long value) {
        this.hjid = value;
    }

    public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy strategy) {
        if (!(object instanceof TDataTypeTemplates)) {
            return false;
        }
        if (this == object) {
            return true;
        }
        final TDataTypeTemplates that = ((TDataTypeTemplates) object);
        {
            List<TLNodeType> lhsLNodeType;
            lhsLNodeType = (((this.lNodeType!= null)&&(!this.lNodeType.isEmpty()))?this.getLNodeType():null);
            List<TLNodeType> rhsLNodeType;
            rhsLNodeType = (((that.lNodeType!= null)&&(!that.lNodeType.isEmpty()))?that.getLNodeType():null);
            if (!strategy.equals(LocatorUtils.property(thisLocator, "lNodeType", lhsLNodeType), LocatorUtils.property(thatLocator, "lNodeType", rhsLNodeType), lhsLNodeType, rhsLNodeType)) {
                return false;
            }
        }
        {
            List<TDOType> lhsDOType;
            lhsDOType = (((this.doType!= null)&&(!this.doType.isEmpty()))?this.getDOType():null);
            List<TDOType> rhsDOType;
            rhsDOType = (((that.doType!= null)&&(!that.doType.isEmpty()))?that.getDOType():null);
            if (!strategy.equals(LocatorUtils.property(thisLocator, "doType", lhsDOType), LocatorUtils.property(thatLocator, "doType", rhsDOType), lhsDOType, rhsDOType)) {
                return false;
            }
        }
        {
            List<TDAType> lhsDAType;
            lhsDAType = (((this.daType!= null)&&(!this.daType.isEmpty()))?this.getDAType():null);
            List<TDAType> rhsDAType;
            rhsDAType = (((that.daType!= null)&&(!that.daType.isEmpty()))?that.getDAType():null);
            if (!strategy.equals(LocatorUtils.property(thisLocator, "daType", lhsDAType), LocatorUtils.property(thatLocator, "daType", rhsDAType), lhsDAType, rhsDAType)) {
                return false;
            }
        }
        {
            List<TEnumType> lhsEnumType;
            lhsEnumType = (((this.enumType!= null)&&(!this.enumType.isEmpty()))?this.getEnumType():null);
            List<TEnumType> rhsEnumType;
            rhsEnumType = (((that.enumType!= null)&&(!that.enumType.isEmpty()))?that.getEnumType():null);
            if (!strategy.equals(LocatorUtils.property(thisLocator, "enumType", lhsEnumType), LocatorUtils.property(thatLocator, "enumType", rhsEnumType), lhsEnumType, rhsEnumType)) {
                return false;
            }
        }
        return true;
    }

    public boolean equals(Object object) {
        final EqualsStrategy strategy = JAXBEqualsStrategy.INSTANCE;
        return equals(null, null, object, strategy);
    }

    public int hashCode(ObjectLocator locator, HashCodeStrategy strategy) {
        int currentHashCode = 1;
        {
            List<TLNodeType> theLNodeType;
            theLNodeType = (((this.lNodeType!= null)&&(!this.lNodeType.isEmpty()))?this.getLNodeType():null);
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "lNodeType", theLNodeType), currentHashCode, theLNodeType);
        }
        {
            List<TDOType> theDOType;
            theDOType = (((this.doType!= null)&&(!this.doType.isEmpty()))?this.getDOType():null);
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "doType", theDOType), currentHashCode, theDOType);
        }
        {
            List<TDAType> theDAType;
            theDAType = (((this.daType!= null)&&(!this.daType.isEmpty()))?this.getDAType():null);
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "daType", theDAType), currentHashCode, theDAType);
        }
        {
            List<TEnumType> theEnumType;
            theEnumType = (((this.enumType!= null)&&(!this.enumType.isEmpty()))?this.getEnumType():null);
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "enumType", theEnumType), currentHashCode, theEnumType);
        }
        return currentHashCode;
    }

    public int hashCode() {
        final HashCodeStrategy strategy = JAXBHashCodeStrategy.INSTANCE;
        return this.hashCode(null, strategy);
    }

}
