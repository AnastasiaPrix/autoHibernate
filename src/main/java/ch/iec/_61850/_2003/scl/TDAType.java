//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.7 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2020.07.13 at 07:58:15 PM MSK 
//


package ch.iec._61850._2003.scl;

import org.jvnet.jaxb2_commons.lang.*;
import org.jvnet.jaxb2_commons.locator.ObjectLocator;
import org.jvnet.jaxb2_commons.locator.util.LocatorUtils;

import javax.persistence.*;
import javax.xml.bind.annotation.*;
import javax.xml.bind.annotation.adapters.NormalizedStringAdapter;
import javax.xml.bind.annotation.adapters.XmlJavaTypeAdapter;
import java.util.ArrayList;
import java.util.List;


/**
 * <p>Java class for tDAType complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="tDAType">
 *   &lt;complexContent>
 *     &lt;extension base="{http://www.iec.ch/61850/2003/SCL}tIDNaming">
 *       &lt;sequence>
 *         &lt;element name="BDA" type="{http://www.iec.ch/61850/2003/SCL}tBDA" maxOccurs="unbounded"/>
 *       &lt;/sequence>
 *       &lt;attribute name="iedType" type="{http://www.iec.ch/61850/2003/SCL}tAnyName" default="" />
 *       &lt;anyAttribute processContents='lax' namespace='##other'/>
 *     &lt;/extension>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "tDAType", propOrder = {
    "bda"
})
@Entity(name = "TDAType")
@Table(name = "TDATYPE")
public class TDAType
    extends TIDNaming
    implements Equals, HashCode
{

    @XmlElement(name = "BDA", required = true)
    protected List<TBDA> bda;
    @XmlAttribute(name = "iedType")
    @XmlJavaTypeAdapter(NormalizedStringAdapter.class)
    protected String iedType;

    /**
     * Gets the value of the bda property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the bda property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getBDA().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link TBDA }
     * 
     * 
     */
    @OneToMany(targetEntity = TBDA.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "BDA_TDATYPE_HJID")
    public List<TBDA> getBDA() {
        if (bda == null) {
            bda = new ArrayList<TBDA>();
        }
        return this.bda;
    }

    /**
     * 
     * 
     */
    public void setBDA(List<TBDA> bda) {
        this.bda = bda;
    }

    /**
     * Gets the value of the iedType property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "IED_TYPE", length = 255)
    public String getIedType() {
        if (iedType == null) {
            return "";
        } else {
            return iedType;
        }
    }

    /**
     * Sets the value of the iedType property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setIedType(String value) {
        this.iedType = value;
    }

    public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy strategy) {
        if (!(object instanceof TDAType)) {
            return false;
        }
        if (this == object) {
            return true;
        }
        if (!super.equals(thisLocator, thatLocator, object, strategy)) {
            return false;
        }
        final TDAType that = ((TDAType) object);
        {
            List<TBDA> lhsBDA;
            lhsBDA = (((this.bda!= null)&&(!this.bda.isEmpty()))?this.getBDA():null);
            List<TBDA> rhsBDA;
            rhsBDA = (((that.bda!= null)&&(!that.bda.isEmpty()))?that.getBDA():null);
            if (!strategy.equals(LocatorUtils.property(thisLocator, "bda", lhsBDA), LocatorUtils.property(thatLocator, "bda", rhsBDA), lhsBDA, rhsBDA)) {
                return false;
            }
        }
        {
            String lhsIedType;
            lhsIedType = this.getIedType();
            String rhsIedType;
            rhsIedType = that.getIedType();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "iedType", lhsIedType), LocatorUtils.property(thatLocator, "iedType", rhsIedType), lhsIedType, rhsIedType)) {
                return false;
            }
        }
        return true;
    }

    public boolean equals(Object object) {
        final EqualsStrategy strategy = JAXBEqualsStrategy.INSTANCE;
        return equals(null, null, object, strategy);
    }

    public int hashCode(ObjectLocator locator, HashCodeStrategy strategy) {
        int currentHashCode = super.hashCode(locator, strategy);
        {
            List<TBDA> theBDA;
            theBDA = (((this.bda!= null)&&(!this.bda.isEmpty()))?this.getBDA():null);
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "bda", theBDA), currentHashCode, theBDA);
        }
        {
            String theIedType;
            theIedType = this.getIedType();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "iedType", theIedType), currentHashCode, theIedType);
        }
        return currentHashCode;
    }

    public int hashCode() {
        final HashCodeStrategy strategy = JAXBHashCodeStrategy.INSTANCE;
        return this.hashCode(null, strategy);
    }

}
