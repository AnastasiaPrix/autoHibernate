//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.7 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2020.07.13 at 07:58:15 PM MSK 
//


package ch.iec._61850._2003.scl;

import org.jvnet.jaxb2_commons.lang.*;
import org.jvnet.jaxb2_commons.locator.ObjectLocator;
import org.jvnet.jaxb2_commons.locator.util.LocatorUtils;

import javax.persistence.*;
import javax.xml.bind.annotation.*;
import javax.xml.bind.annotation.adapters.NormalizedStringAdapter;
import javax.xml.bind.annotation.adapters.XmlJavaTypeAdapter;
import java.util.ArrayList;
import java.util.List;


/**
 * <p>Java class for tAnyLN complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="tAnyLN">
 *   &lt;complexContent>
 *     &lt;extension base="{http://www.iec.ch/61850/2003/SCL}tUnNaming">
 *       &lt;sequence>
 *         &lt;element name="DataSet" type="{http://www.iec.ch/61850/2003/SCL}tDataSet" maxOccurs="unbounded" minOccurs="0"/>
 *         &lt;element name="ReportControl" type="{http://www.iec.ch/61850/2003/SCL}tReportControl" maxOccurs="unbounded" minOccurs="0"/>
 *         &lt;element name="LogControl" type="{http://www.iec.ch/61850/2003/SCL}tLogControl" maxOccurs="unbounded" minOccurs="0"/>
 *         &lt;element name="DOI" type="{http://www.iec.ch/61850/2003/SCL}tDOI" maxOccurs="unbounded" minOccurs="0"/>
 *         &lt;element name="Inputs" type="{http://www.iec.ch/61850/2003/SCL}tInputs" minOccurs="0"/>
 *       &lt;/sequence>
 *       &lt;attribute name="lnType" use="required" type="{http://www.iec.ch/61850/2003/SCL}tName" />
 *       &lt;anyAttribute processContents='lax' namespace='##other'/>
 *     &lt;/extension>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "tAnyLN", propOrder = {
    "dataSet",
    "reportControl",
    "logControl",
    "doi",
    "inputs"
})
@XmlSeeAlso({
    TLN.class,
    TLN0 .class
})
@Entity(name = "TAnyLN")
@Table(name = "TANY_LN")
public abstract class TAnyLN
    extends TUnNaming
    implements Equals, HashCode
{

    @XmlElement(name = "DataSet")
    protected List<TDataSet> dataSet;
    @XmlElement(name = "ReportControl")
    protected List<TReportControl> reportControl;
    @XmlElement(name = "LogControl")
    protected List<TLogControl> logControl;
    @XmlElement(name = "DOI")
    protected List<TDOI> doi;
    @XmlElement(name = "Inputs")
    protected TInputs inputs;
    @XmlAttribute(name = "lnType", required = true)
    @XmlJavaTypeAdapter(NormalizedStringAdapter.class)
    protected String lnType;

    /**
     * Gets the value of the dataSet property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the dataSet property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getDataSet().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link TDataSet }
     * 
     * 
     */
    @OneToMany(targetEntity = TDataSet.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "DATA_SET_TANY_LN_HJID")
    public List<TDataSet> getDataSet() {
        if (dataSet == null) {
            dataSet = new ArrayList<TDataSet>();
        }
        return this.dataSet;
    }

    /**
     * 
     * 
     */
    public void setDataSet(List<TDataSet> dataSet) {
        this.dataSet = dataSet;
    }

    /**
     * Gets the value of the reportControl property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the reportControl property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getReportControl().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link TReportControl }
     * 
     * 
     */
    @OneToMany(targetEntity = TReportControl.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "REPORT_CONTROL_TANY_LN_HJID")
    public List<TReportControl> getReportControl() {
        if (reportControl == null) {
            reportControl = new ArrayList<TReportControl>();
        }
        return this.reportControl;
    }

    /**
     * 
     * 
     */
    public void setReportControl(List<TReportControl> reportControl) {
        this.reportControl = reportControl;
    }

    /**
     * Gets the value of the logControl property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the logControl property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getLogControl().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link TLogControl }
     * 
     * 
     */
    @OneToMany(targetEntity = TLogControl.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "LOG_CONTROL_TANY_LN_HJID")
    public List<TLogControl> getLogControl() {
        if (logControl == null) {
            logControl = new ArrayList<TLogControl>();
        }
        return this.logControl;
    }

    /**
     * 
     * 
     */
    public void setLogControl(List<TLogControl> logControl) {
        this.logControl = logControl;
    }

    /**
     * Gets the value of the doi property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the doi property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getDOI().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link TDOI }
     * 
     * 
     */
    @OneToMany(targetEntity = TDOI.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "DOI_TANY_LN_HJID")
    public List<TDOI> getDOI() {
        if (doi == null) {
            doi = new ArrayList<TDOI>();
        }
        return this.doi;
    }

    /**
     * 
     * 
     */
    public void setDOI(List<TDOI> doi) {
        this.doi = doi;
    }

    /**
     * Gets the value of the inputs property.
     * 
     * @return
     *     possible object is
     *     {@link TInputs }
     *     
     */
    @ManyToOne(targetEntity = TInputs.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "INPUTS_TANY_LN_HJID")
    public TInputs getInputs() {
        return inputs;
    }

    /**
     * Sets the value of the inputs property.
     * 
     * @param value
     *     allowed object is
     *     {@link TInputs }
     *     
     */
    public void setInputs(TInputs value) {
        this.inputs = value;
    }

    /**
     * Gets the value of the lnType property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "LN_TYPE", length = 255)
    public String getLnType() {
        return lnType;
    }

    /**
     * Sets the value of the lnType property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setLnType(String value) {
        this.lnType = value;
    }

    public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy strategy) {
        if (!(object instanceof TAnyLN)) {
            return false;
        }
        if (this == object) {
            return true;
        }
        if (!super.equals(thisLocator, thatLocator, object, strategy)) {
            return false;
        }
        final TAnyLN that = ((TAnyLN) object);
        {
            List<TDataSet> lhsDataSet;
            lhsDataSet = (((this.dataSet!= null)&&(!this.dataSet.isEmpty()))?this.getDataSet():null);
            List<TDataSet> rhsDataSet;
            rhsDataSet = (((that.dataSet!= null)&&(!that.dataSet.isEmpty()))?that.getDataSet():null);
            if (!strategy.equals(LocatorUtils.property(thisLocator, "dataSet", lhsDataSet), LocatorUtils.property(thatLocator, "dataSet", rhsDataSet), lhsDataSet, rhsDataSet)) {
                return false;
            }
        }
        {
            List<TReportControl> lhsReportControl;
            lhsReportControl = (((this.reportControl!= null)&&(!this.reportControl.isEmpty()))?this.getReportControl():null);
            List<TReportControl> rhsReportControl;
            rhsReportControl = (((that.reportControl!= null)&&(!that.reportControl.isEmpty()))?that.getReportControl():null);
            if (!strategy.equals(LocatorUtils.property(thisLocator, "reportControl", lhsReportControl), LocatorUtils.property(thatLocator, "reportControl", rhsReportControl), lhsReportControl, rhsReportControl)) {
                return false;
            }
        }
        {
            List<TLogControl> lhsLogControl;
            lhsLogControl = (((this.logControl!= null)&&(!this.logControl.isEmpty()))?this.getLogControl():null);
            List<TLogControl> rhsLogControl;
            rhsLogControl = (((that.logControl!= null)&&(!that.logControl.isEmpty()))?that.getLogControl():null);
            if (!strategy.equals(LocatorUtils.property(thisLocator, "logControl", lhsLogControl), LocatorUtils.property(thatLocator, "logControl", rhsLogControl), lhsLogControl, rhsLogControl)) {
                return false;
            }
        }
        {
            List<TDOI> lhsDOI;
            lhsDOI = (((this.doi!= null)&&(!this.doi.isEmpty()))?this.getDOI():null);
            List<TDOI> rhsDOI;
            rhsDOI = (((that.doi!= null)&&(!that.doi.isEmpty()))?that.getDOI():null);
            if (!strategy.equals(LocatorUtils.property(thisLocator, "doi", lhsDOI), LocatorUtils.property(thatLocator, "doi", rhsDOI), lhsDOI, rhsDOI)) {
                return false;
            }
        }
        {
            TInputs lhsInputs;
            lhsInputs = this.getInputs();
            TInputs rhsInputs;
            rhsInputs = that.getInputs();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "inputs", lhsInputs), LocatorUtils.property(thatLocator, "inputs", rhsInputs), lhsInputs, rhsInputs)) {
                return false;
            }
        }
        {
            String lhsLnType;
            lhsLnType = this.getLnType();
            String rhsLnType;
            rhsLnType = that.getLnType();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "lnType", lhsLnType), LocatorUtils.property(thatLocator, "lnType", rhsLnType), lhsLnType, rhsLnType)) {
                return false;
            }
        }
        return true;
    }

    public boolean equals(Object object) {
        final EqualsStrategy strategy = JAXBEqualsStrategy.INSTANCE;
        return equals(null, null, object, strategy);
    }

    public int hashCode(ObjectLocator locator, HashCodeStrategy strategy) {
        int currentHashCode = super.hashCode(locator, strategy);
        {
            List<TDataSet> theDataSet;
            theDataSet = (((this.dataSet!= null)&&(!this.dataSet.isEmpty()))?this.getDataSet():null);
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "dataSet", theDataSet), currentHashCode, theDataSet);
        }
        {
            List<TReportControl> theReportControl;
            theReportControl = (((this.reportControl!= null)&&(!this.reportControl.isEmpty()))?this.getReportControl():null);
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "reportControl", theReportControl), currentHashCode, theReportControl);
        }
        {
            List<TLogControl> theLogControl;
            theLogControl = (((this.logControl!= null)&&(!this.logControl.isEmpty()))?this.getLogControl():null);
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "logControl", theLogControl), currentHashCode, theLogControl);
        }
        {
            List<TDOI> theDOI;
            theDOI = (((this.doi!= null)&&(!this.doi.isEmpty()))?this.getDOI():null);
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "doi", theDOI), currentHashCode, theDOI);
        }
        {
            TInputs theInputs;
            theInputs = this.getInputs();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "inputs", theInputs), currentHashCode, theInputs);
        }
        {
            String theLnType;
            theLnType = this.getLnType();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "lnType", theLnType), currentHashCode, theLnType);
        }
        return currentHashCode;
    }

    public int hashCode() {
        final HashCodeStrategy strategy = JAXBHashCodeStrategy.INSTANCE;
        return this.hashCode(null, strategy);
    }

}
