//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.7 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2020.07.13 at 07:58:15 PM MSK 
//


package ch.iec._61850._2003.scl;

import org.jvnet.jaxb2_commons.lang.*;
import org.jvnet.jaxb2_commons.locator.ObjectLocator;
import org.jvnet.jaxb2_commons.locator.util.LocatorUtils;

import javax.persistence.*;
import javax.xml.bind.annotation.*;
import java.util.ArrayList;
import java.util.List;


/**
 * <p>Java class for tPowerTransformer complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="tPowerTransformer">
 *   &lt;complexContent>
 *     &lt;extension base="{http://www.iec.ch/61850/2003/SCL}tEquipment">
 *       &lt;sequence>
 *         &lt;element name="TransformerWinding" type="{http://www.iec.ch/61850/2003/SCL}tTransformerWinding" maxOccurs="unbounded"/>
 *       &lt;/sequence>
 *       &lt;attribute name="type" use="required" type="{http://www.iec.ch/61850/2003/SCL}tPowerTransformerEnum" fixed="PTR" />
 *       &lt;anyAttribute processContents='lax' namespace='##other'/>
 *     &lt;/extension>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "tPowerTransformer", propOrder = {
    "transformerWinding"
})
@Entity(name = "TPowerTransformer")
@Table(name = "TPOWER_TRANSFORMER")
public class TPowerTransformer
    extends TEquipment
    implements Equals, HashCode
{

    @XmlElement(name = "TransformerWinding", required = true)
    protected List<TTransformerWinding> transformerWinding;
    @XmlAttribute(name = "type", required = true)
    protected TPowerTransformerEnum type;

    /**
     * Gets the value of the transformerWinding property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the transformerWinding property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getTransformerWinding().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link TTransformerWinding }
     * 
     * 
     */
    @OneToMany(targetEntity = TTransformerWinding.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "TRANSFORMER_WINDING_TPOWER_T_0")
    public List<TTransformerWinding> getTransformerWinding() {
        if (transformerWinding == null) {
            transformerWinding = new ArrayList<TTransformerWinding>();
        }
        return this.transformerWinding;
    }

    /**
     * 
     * 
     */
    public void setTransformerWinding(List<TTransformerWinding> transformerWinding) {
        this.transformerWinding = transformerWinding;
    }

    /**
     * Gets the value of the type property.
     * 
     * @return
     *     possible object is
     *     {@link TPowerTransformerEnum }
     *     
     */
    @Basic
    @Column(name = "TYPE_", length = 255)
    @Enumerated(EnumType.STRING)
    public TPowerTransformerEnum getType() {
        if (type == null) {
            return TPowerTransformerEnum.PTR;
        } else {
            return type;
        }
    }

    /**
     * Sets the value of the type property.
     * 
     * @param value
     *     allowed object is
     *     {@link TPowerTransformerEnum }
     *     
     */
    public void setType(TPowerTransformerEnum value) {
        this.type = value;
    }

    public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy strategy) {
        if (!(object instanceof TPowerTransformer)) {
            return false;
        }
        if (this == object) {
            return true;
        }
        if (!super.equals(thisLocator, thatLocator, object, strategy)) {
            return false;
        }
        final TPowerTransformer that = ((TPowerTransformer) object);
        {
            List<TTransformerWinding> lhsTransformerWinding;
            lhsTransformerWinding = (((this.transformerWinding!= null)&&(!this.transformerWinding.isEmpty()))?this.getTransformerWinding():null);
            List<TTransformerWinding> rhsTransformerWinding;
            rhsTransformerWinding = (((that.transformerWinding!= null)&&(!that.transformerWinding.isEmpty()))?that.getTransformerWinding():null);
            if (!strategy.equals(LocatorUtils.property(thisLocator, "transformerWinding", lhsTransformerWinding), LocatorUtils.property(thatLocator, "transformerWinding", rhsTransformerWinding), lhsTransformerWinding, rhsTransformerWinding)) {
                return false;
            }
        }
        {
            TPowerTransformerEnum lhsType;
            lhsType = this.getType();
            TPowerTransformerEnum rhsType;
            rhsType = that.getType();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "type", lhsType), LocatorUtils.property(thatLocator, "type", rhsType), lhsType, rhsType)) {
                return false;
            }
        }
        return true;
    }

    public boolean equals(Object object) {
        final EqualsStrategy strategy = JAXBEqualsStrategy.INSTANCE;
        return equals(null, null, object, strategy);
    }

    public int hashCode(ObjectLocator locator, HashCodeStrategy strategy) {
        int currentHashCode = super.hashCode(locator, strategy);
        {
            List<TTransformerWinding> theTransformerWinding;
            theTransformerWinding = (((this.transformerWinding!= null)&&(!this.transformerWinding.isEmpty()))?this.getTransformerWinding():null);
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "transformerWinding", theTransformerWinding), currentHashCode, theTransformerWinding);
        }
        {
            TPowerTransformerEnum theType;
            theType = this.getType();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "type", theType), currentHashCode, theType);
        }
        return currentHashCode;
    }

    public int hashCode() {
        final HashCodeStrategy strategy = JAXBHashCodeStrategy.INSTANCE;
        return this.hashCode(null, strategy);
    }

}
