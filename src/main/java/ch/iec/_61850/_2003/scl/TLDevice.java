//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.7 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2020.07.13 at 07:58:15 PM MSK 
//


package ch.iec._61850._2003.scl;

import org.jvnet.jaxb2_commons.lang.*;
import org.jvnet.jaxb2_commons.locator.ObjectLocator;
import org.jvnet.jaxb2_commons.locator.util.LocatorUtils;

import javax.persistence.*;
import javax.xml.bind.annotation.*;
import javax.xml.bind.annotation.adapters.CollapsedStringAdapter;
import javax.xml.bind.annotation.adapters.NormalizedStringAdapter;
import javax.xml.bind.annotation.adapters.XmlJavaTypeAdapter;
import java.util.ArrayList;
import java.util.List;


/**
 * <p>Java class for tLDevice complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="tLDevice">
 *   &lt;complexContent>
 *     &lt;extension base="{http://www.iec.ch/61850/2003/SCL}tUnNaming">
 *       &lt;sequence>
 *         &lt;element ref="{http://www.iec.ch/61850/2003/SCL}LN0"/>
 *         &lt;element ref="{http://www.iec.ch/61850/2003/SCL}LN" maxOccurs="unbounded" minOccurs="0"/>
 *         &lt;element name="AccessControl" type="{http://www.iec.ch/61850/2003/SCL}tAccessControl" minOccurs="0"/>
 *       &lt;/sequence>
 *       &lt;attribute name="inst" use="required" type="{http://www.iec.ch/61850/2003/SCL}tName" />
 *       &lt;attribute name="ldName" type="{http://www.iec.ch/61850/2003/SCL}tRestrLdName" />
 *       &lt;anyAttribute processContents='lax' namespace='##other'/>
 *     &lt;/extension>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "tLDevice", propOrder = {
    "ln0",
    "ln",
    "accessControl"
})
@Entity(name = "TLDevice")
@Table(name = "TLDEVICE")
public class TLDevice
    extends TUnNaming
    implements Equals, HashCode
{

    @XmlElement(name = "LN0", required = true)
    protected LN0 ln0;
    @XmlElement(name = "LN")
    protected List<TLN> ln;
    @XmlElement(name = "AccessControl")
    protected TAccessControl accessControl;
    @XmlAttribute(name = "inst", required = true)
    @XmlJavaTypeAdapter(NormalizedStringAdapter.class)
    protected String inst;
    @XmlAttribute(name = "ldName")
    @XmlJavaTypeAdapter(CollapsedStringAdapter.class)
    protected String ldName;

    /**
     * Gets the value of the ln0 property.
     * 
     * @return
     *     possible object is
     *     {@link LN0 }
     *     
     */
    @ManyToOne(targetEntity = LN0 .class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "LN__0_TLDEVICE_HJID")
    public LN0 getLN0() {
        return ln0;
    }

    /**
     * Sets the value of the ln0 property.
     * 
     * @param value
     *     allowed object is
     *     {@link LN0 }
     *     
     */
    public void setLN0(LN0 value) {
        this.ln0 = value;
    }

    /**
     * Gets the value of the ln property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the ln property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getLN().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link TLN }
     * 
     * 
     */
    @OneToMany(targetEntity = TLN.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "LN_TLDEVICE_HJID")
    public List<TLN> getLN() {
        if (ln == null) {
            ln = new ArrayList<TLN>();
        }
        return this.ln;
    }

    /**
     * 
     * 
     */
    public void setLN(List<TLN> ln) {
        this.ln = ln;
    }

    /**
     * Gets the value of the accessControl property.
     * 
     * @return
     *     possible object is
     *     {@link TAccessControl }
     *     
     */
    @ManyToOne(targetEntity = TAccessControl.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "ACCESS_CONTROL_TLDEVICE_HJID")
    public TAccessControl getAccessControl() {
        return accessControl;
    }

    /**
     * Sets the value of the accessControl property.
     * 
     * @param value
     *     allowed object is
     *     {@link TAccessControl }
     *     
     */
    public void setAccessControl(TAccessControl value) {
        this.accessControl = value;
    }

    /**
     * Gets the value of the inst property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "INST", length = 255)
    public String getInst() {
        return inst;
    }

    /**
     * Sets the value of the inst property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setInst(String value) {
        this.inst = value;
    }

    /**
     * Gets the value of the ldName property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    @Basic
    @Column(name = "LD_NAME", length = 64)
    public String getLdName() {
        return ldName;
    }

    /**
     * Sets the value of the ldName property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setLdName(String value) {
        this.ldName = value;
    }

    public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy strategy) {
        if (!(object instanceof TLDevice)) {
            return false;
        }
        if (this == object) {
            return true;
        }
        if (!super.equals(thisLocator, thatLocator, object, strategy)) {
            return false;
        }
        final TLDevice that = ((TLDevice) object);
        {
            LN0 lhsLN0;
            lhsLN0 = this.getLN0();
            LN0 rhsLN0;
            rhsLN0 = that.getLN0();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "ln0", lhsLN0), LocatorUtils.property(thatLocator, "ln0", rhsLN0), lhsLN0, rhsLN0)) {
                return false;
            }
        }
        {
            List<TLN> lhsLN;
            lhsLN = (((this.ln!= null)&&(!this.ln.isEmpty()))?this.getLN():null);
            List<TLN> rhsLN;
            rhsLN = (((that.ln!= null)&&(!that.ln.isEmpty()))?that.getLN():null);
            if (!strategy.equals(LocatorUtils.property(thisLocator, "ln", lhsLN), LocatorUtils.property(thatLocator, "ln", rhsLN), lhsLN, rhsLN)) {
                return false;
            }
        }
        {
            TAccessControl lhsAccessControl;
            lhsAccessControl = this.getAccessControl();
            TAccessControl rhsAccessControl;
            rhsAccessControl = that.getAccessControl();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "accessControl", lhsAccessControl), LocatorUtils.property(thatLocator, "accessControl", rhsAccessControl), lhsAccessControl, rhsAccessControl)) {
                return false;
            }
        }
        {
            String lhsInst;
            lhsInst = this.getInst();
            String rhsInst;
            rhsInst = that.getInst();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "inst", lhsInst), LocatorUtils.property(thatLocator, "inst", rhsInst), lhsInst, rhsInst)) {
                return false;
            }
        }
        {
            String lhsLdName;
            lhsLdName = this.getLdName();
            String rhsLdName;
            rhsLdName = that.getLdName();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "ldName", lhsLdName), LocatorUtils.property(thatLocator, "ldName", rhsLdName), lhsLdName, rhsLdName)) {
                return false;
            }
        }
        return true;
    }

    public boolean equals(Object object) {
        final EqualsStrategy strategy = JAXBEqualsStrategy.INSTANCE;
        return equals(null, null, object, strategy);
    }

    public int hashCode(ObjectLocator locator, HashCodeStrategy strategy) {
        int currentHashCode = super.hashCode(locator, strategy);
        {
            LN0 theLN0;
            theLN0 = this.getLN0();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "ln0", theLN0), currentHashCode, theLN0);
        }
        {
            List<TLN> theLN;
            theLN = (((this.ln!= null)&&(!this.ln.isEmpty()))?this.getLN():null);
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "ln", theLN), currentHashCode, theLN);
        }
        {
            TAccessControl theAccessControl;
            theAccessControl = this.getAccessControl();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "accessControl", theAccessControl), currentHashCode, theAccessControl);
        }
        {
            String theInst;
            theInst = this.getInst();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "inst", theInst), currentHashCode, theInst);
        }
        {
            String theLdName;
            theLdName = this.getLdName();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "ldName", theLdName), currentHashCode, theLdName);
        }
        return currentHashCode;
    }

    public int hashCode() {
        final HashCodeStrategy strategy = JAXBHashCodeStrategy.INSTANCE;
        return this.hashCode(null, strategy);
    }

}
